// TODO
// 文字 '(', ')', '{', '}', '[', ']' のみを含む文字列 s が与えられたとき、その入力文字列が有効であるかどうかを判定する。

// 入力文字列が有効であるのは、以下の場合である。

// 開き括弧は、同じ種類の括弧で閉じなければならない。
// 開いている括弧は正しい順序で閉じなければならない。
// すべての閉じ括弧は、対応する同じタイプの開き括弧を持つ。

import { isValid } from "../../js/220607";

describe("文字 '(', ')', '{', '}', '[', ']' のみを含む文字列 s が与えられたとき、その入力文字列が有効であるかどうかを判定する関数", () => {
  describe('開き括弧は、同じ種類の括弧で閉じなければならない。', () => {
    test("文字列 s の文字数が奇数ならこの条件はパスしない", () => {
      expect(isValid("(")).toBe(false);
    });
    test("文字列 s の最初の文字が ( なら、次にくる文字は ) である", () => {
      expect(isValid("()")).toBe(true);
    });
    test("文字列 s の最初の文字が { なら、次にくる文字は } である", () => {
      expect(isValid("{}")).toBe(true);
    });
    test("文字列 s の最初の文字が [ なら、次にくる文字は ] である", () => {
      expect(isValid("[]")).toBe(true);
    });
  });
  describe('開いている括弧は正しい順序で閉じなければならない。', () => {
    it.todo("({}) は正しい順序で閉じている");
    it.todo("{[]} は正しい順序で閉じている");
  })
});
